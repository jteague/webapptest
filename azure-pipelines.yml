# Starter pipeline
#- task: DotNetCoreCLI@2
#  inputs:
#    command: 'build'
#    projects: '**/*.sln'
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

steps:
- script: echo Building Shit
  displayName: 'Run a one-line script'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
    vstsFeed: 'd6f15244-838b-427c-b02a-76d6aea51dcc'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.sln'
    arguments: '-c $(BuildConfiguration)'
    
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '-c $(BuildConfiguration) -o $(Build.ArtifactStagingDirectory)\publish\WebApi'
    
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    zipAfterPublish: false
    modifyOutputPath: false
    projects: '**/WebJobTest.csproj'
    arguments: '-c $(BuildConfiguration) -o $(Build.ArtifactStagingDirectory)\publish\WebJob\App_Data\jobs\continuous\WebJobTest'

- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'MiahSubscription (af4b71ad-280e-4024-a78e-2a1e8b74abd4)'
    ScriptType: 'InlineScript'
    Inline: '"dotnet WebJobTest.dll" | Out-File run.cmd -Encoding ASCII; $LastExitCode'
    workingDirectory: '$(Build.ArtifactStagingDirectory)\publish\WebJob\App_Data\jobs\continuous\WebJobTest'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)\publish\WebApi'
    artifact: 'drop'
    publishLocation: 'pipeline'
    
# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(Build.ArtifactStagingDirectory)\publish\WebJob\App_Data\jobs\continuous\WebJobTest'
#     artifact: 'webjobdrop'
#     publishLocation: 'pipeline'